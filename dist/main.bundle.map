{"version":3,"sources":["webpack:///./src/app/event-entry.ts","webpack:///./src/app/event.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/event-entry.component.ts","webpack:///./src/app/event-view.component.ts","webpack:///./src/app/login.component.ts","webpack:///./src/app/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/token.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/event-view.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/event-entry.component.html","webpack:///./src/app/event-view.component.html","webpack:///./src/app/login.component.html","webpack:///./src/app/register.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Event } from './event';\r\n\r\nexport class EventEntry {\r\n    date: Date;\r\n    events: Event[];\r\n\r\n    constructor(date: Date, events: Event[]) {\r\n        this.date = date;\r\n        this.events = events;\r\n    }\r\n\r\n    allAreInactive(): boolean {\r\n        let b: boolean = true;\r\n        this.events.forEach(e => {if (e.isActive) {\r\n            b = false;\r\n        }})\r\n        return b;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/event-entry.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Event } from './event';\r\nimport { Activity } from './activity';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n\r\n    private URL = 'http://zenith-society-nj-core.azurewebsites.net/api/events';  // URL to web api\r\n    private URL_ANON = 'http://zenith-society-nj-core.azurewebsites.net/api/events/anon'; \r\n    private activities: Map<number, Activity> = new Map<number, Activity>();\r\n\r\n    constructor(private http: Http, private tokenService: TokenService) { }\r\n\r\n    getEvents(): Promise<Event[]> {\r\n        let headers: Headers = new Headers();\r\n        headers.append('Authorization', 'Bearer ' + this.tokenService.getToken());\r\n        headers.append('content-type', 'application/json');\r\n\r\n        let options = new RequestOptions({headers: headers});\r\n\r\n        let events: Promise<Event[]> = this.http.get(this.tokenService.isLoggedIn() ? this.URL : this.URL_ANON, options)\r\n               .toPromise()\r\n               .then(response => response.json())\r\n               .catch(this.handleError);\r\n        if (events == undefined) {\r\n            \r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    private convertToEvents(input: JSON): Event[] {\r\n        console.log(input);\r\n        return null;\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/event.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 388;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 388\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { TokenService } from './token.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private tokenService: TokenService) { }\n  title = 'Zenith Society';\n\n  logout(): void {\n    this.tokenService.logOut();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { EventService } from './event.service';\nimport { EventViewComponent } from './event-view.component';\nimport { EventEntryComponent } from './event-entry.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\nimport { TokenService } from './token.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EventViewComponent,\n    EventEntryComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot([\n    {\n      path: '', redirectTo: '/events', pathMatch: 'full'\n    },\n    {\n      path: 'events', component: EventViewComponent\n    },\n    {\n      path: 'login', component: LoginComponent\n    },\n    {\n      path: 'register', component: RegisterComponent\n    },\n    {\n      path: 'events/:id', component: EventViewComponent,  canActivate: [TokenService]\n    }\n  ])\n  ],\n  providers: [ EventService, TokenService ],\n  bootstrap: [ AppComponent ],\n})\n\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { Event } from './event';\r\nimport { EventEntry } from './event-entry';\r\nimport { TokenService } from './token.service';\r\n\r\n@Component({\r\n  selector: 'event-entry',\r\n  templateUrl: './event-entry.component.html'\r\n})\r\n\r\nexport class EventEntryComponent {\r\n    constructor(private tokenService: TokenService) {}\r\n    @Input() entry: EventEntry;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/event-entry.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { Event } from './event';\r\nimport { EventService } from './event.service';\r\nimport { EventEntry } from './event-entry';\r\nimport { TokenService } from './token.service';\r\n\r\n@Component({\r\n  selector: 'event-view',\r\n  templateUrl: './event-view.component.html',\r\n  styleUrls: ['./event-view.component.css']\r\n})\r\n\r\nexport class EventViewComponent implements OnInit {\r\n    events: Event[];\r\n    dates: Date[];\r\n    entries: EventEntry[];\r\n    id: number;\r\n    nextId: number;\r\n    previousId: number;\r\n    isLoggedIn: boolean;\r\n\r\n    constructor(private eventservice: EventService, private route: ActivatedRoute, private tokenService: TokenService) {}\r\n    \r\n    getEvents(): void {\r\n        this.eventservice.getEvents().then(events => this.events = events).then(e => { this.getUniqueDatesForWeek(e)});\r\n    }\r\n\r\n    getUniqueDatesForWeek(events: Event[]): void {\r\n        this.dates = [];\r\n        this.convertStringsToDates();\r\n        events.forEach(event => {\r\n            if (!this.dates.some(d => this.convertDate(d) === this.convertDate(event.eventFromDate))) {\r\n                this.dates.push(event.eventFromDate);\r\n            }\r\n        });\r\n        this.generateEntries();\r\n    }\r\n\r\n    convertStringsToDates():void {\r\n        this.events.forEach(e => {e.creationDate = new Date(e.creationDate);\r\n                                    e.eventFromDate = new Date(e.eventFromDate);\r\n                                        e.eventToDate = new Date(e.eventToDate)});\r\n    }\r\n\r\n    generateEntries(): void {\r\n        this.entries = [];\r\n\r\n        this.dates.forEach(date => {\r\n            if (date.getTime() >= this.changeDateBy(this.getStartOfWeek(), (this.id * 7) - 1).getTime()\r\n             && date.getTime() < this.changeDateBy(this.getEndOfWeek(), (this.id * 7)).getTime()) {\r\n                this.entries.push(new EventEntry(date, this.getActivitiesInDay(date)));\r\n             }\r\n        });\r\n\r\n        this.entries.sort((a: EventEntry, b: EventEntry) => {\r\n            return a.date.getTime() - b.date.getTime();\r\n         });\r\n    }\r\n\r\n    getActivitiesInDay(date: Date): Event[] {\r\n        var list = new Array();\r\n        this.events.forEach(event => {\r\n            if (this.convertDate(event.eventFromDate) === this.convertDate(date)) {\r\n                list.push(event);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    convertDate(date: Date): string {\r\n        var s: string = \"\";\r\n        s = date.getFullYear().toString() + date.getMonth().toString() + date.getDate().toString();\r\n        return s;\r\n    }\r\n\r\n    changeDateBy(date: Date, days: number): Date {\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    }\r\n\r\n    getStartOfWeek(): Date {\r\n        var date = new Date();\r\n        var curDay = date.getDay();\r\n        var diff = date.getDate() - curDay + (curDay == 0 ? -6:1);\r\n        return new Date(date.setDate(diff));\r\n    }\r\n\r\n    getEndOfWeek(): Date {\r\n        return this.changeDateBy(this.getStartOfWeek(), 6);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isLoggedIn = this.tokenService.isLoggedIn();\r\n        /*this.route.params\r\n        .subscribe(param => {\r\n            this.id = param['id'];\r\n            if (this.id == undefined) {\r\n                this.id = 0;\r\n            }\r\n            this.nextId = (this.id - 1);\r\n            this.previousId = (Number(this.id) + 1);\r\n        });*/\r\n        this.id = 0;\r\n        this.getEvents();\r\n    }\r\n\r\n    navForward(): void {\r\n        this.id--;\r\n        this.getEvents();\r\n    }\r\n\r\n    navBackward(): void {\r\n        this.id++;\r\n        this.getEvents();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/event-view.component.ts","import { Component } from '@angular/core';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport { TokenService } from './token.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html'\r\n})\r\n\r\nexport class LoginComponent {\r\n  private URL = 'http://zenith-society-nj-core.azurewebsites.net/connect/token/';\r\n\r\n  constructor(private http: Http, private tokenService: TokenService) {}\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  onSubmit() { this.login(this.username, this.password) }\r\n  login(username: string, password: string) {\r\n      let creds = 'username='+username+'&password='+password+'&grant_type=password'\r\n       let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n       let options = new RequestOptions({ headers: headers });\r\n        return this.http.post(this.URL, creds, options)\r\n            .toPromise()\r\n            .then(r => {\r\n                \r\n                let user = r.json();\r\n                this.tokenService.setToken(user[\"access_token\"]);\r\n            });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/login.component.ts","import { Component } from '@angular/core';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport { TokenService } from './token.service';\r\n\r\n@Component({\r\n  selector: 'register',\r\n  templateUrl: './register.component.html'\r\n})\r\n\r\nexport class RegisterComponent {\r\n    private URL = 'http://zenith-society-nj-core.azurewebsites.net/Account/Register';\r\n\r\n    constructor(private http: Http, private tokenService: TokenService) {}\r\n\r\n    username: string;\r\n    password: string;\r\n    email: string;\r\n    firstname: string;\r\n    lastname: string;\r\n\r\n    onSubmit() { this.register(this.username, this.password, this.email, this.firstname, this.lastname) }\r\n    register(username: string, password: string, email: string, firstname: string, lastname: string) {\r\n      let creds = 'username='+username+'&password='+password+'&confirmpassword='+password+'&email='+email+'&firstname='+firstname+'&lastname='+lastname;\r\n        let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http.post(this.URL, creds, options)\r\n            .toPromise()\r\n            .then(r => {\r\n                \r\n                let user = r.json();\r\n                this.tokenService.setToken(user[\"access_token\"]);\r\n            });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/register.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate } from '@angular/router';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class TokenService implements CanActivate {\r\n    TOKEN_NAME: string = \"zenithToken\";\r\n\r\n    getToken(): string {\r\n        let token:string = localStorage.getItem(this.TOKEN_NAME);\r\n\r\n        if (token == undefined) {\r\n            return \"\";\r\n        }\r\n\r\n        return token;\r\n    }\r\n\r\n    setToken(token:string):void {\r\n        localStorage.setItem(this.TOKEN_NAME, token);\r\n    }\r\n\r\n    isLoggedIn():boolean {\r\n        return this.getToken().length > 0;\r\n    }\r\n\r\n    logOut(): void {\r\n        localStorage.setItem(this.TOKEN_NAME, \"\");\r\n    }\r\n\r\n    canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean>|Promise<boolean>|boolean {\r\n    return this.isLoggedIn();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/token.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 666\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/event-view.component.css\n// module id = 667\n// module chunks = 1","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\r\\n  <h1>\\r\\n    {{title}}\\r\\n  </h1>\\r\\n</div>\\r\\n<nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span> \\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\r\\n      <ul class=\\\"nav navbar-nav navbar-\\\">\\r\\n        <li><a routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">EVENTS</a></li>\\r\\n        <li><a *ngIf=\\\"!tokenService.isLoggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">LOGIN</a></li>\\r\\n        <li><a routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">REGISTER</a></li>\\r\\n        <li><a *ngIf=\\\"tokenService.isLoggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\" (click)=\\\"logout()\\\">LOGOUT</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 668\n// module chunks = 1","module.exports = \"<tr><p>{{entry.date | date: 'EEEE MMMM d, y'}}</p></tr>\\r\\n<tr *ngFor=\\\"let event of entry.events\\\">\\r\\n    <td><p>{{event.activity.activityDescription}}</p></td>\\r\\n    <td [hidden]=\\\"!tokenService.isLoggedIn() && !event.isActive\\\"><p>{{event.eventFromDate | date: 'hh:mm:a'}} - {{event.eventToDate | date: 'hh:mm:a'}}</p></td>\\r\\n</tr>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/event-entry.component.html\n// module id = 669\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1 class=\\\"form-account-heading\\\">Events</h1>    \\r\\n    <table class=\\\"table table-hover table-bordered\\\">\\r\\n        <tr *ngFor=\\\"let entry of entries\\\">\\r\\n            <event-entry [entry]=\\\"entry\\\" [hidden]=\\\"entry.allAreInactive() && !isLoggedIn\\\"></event-entry>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <div class=\\\"col-md-12 text-center\\\">\\r\\n        <button class=\\\"btn btn-lg btn-danger\\\" (click)=\\\"navForward()\\\" *ngIf=\\\"isLoggedIn\\\"> </button>\\r\\n        <button class=\\\"btn btn-lg btn-danger\\\" (click)=\\\"navBackward()\\\" *ngIf=\\\"isLoggedIn\\\"> </button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/event-view.component.html\n// module id = 670\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <form class=\\\"form-account\\\" (ngSubmit)=\\\"onSubmit()\\\" [hidden]=\\\"tokenService.isLoggedIn()\\\">\\r\\n        <h1 class=\\\"form-account-heading text-muted\\\">Login</h1>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" placeholder=\\\"Enter Username\\\" name=\\\"username\\\" required=\\\"\\\" autofocus=\\\"\\\" />\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" required=\\\"\\\" />\\r\\n        <button class=\\\"btn btn-lg btn-danger btn-block\\\" type=\\\"submit\\\">Login</button>\\r\\n    </form>\\r\\n    <h1 class=\\\"form-account-heading\\\" *ngIf=\\\"tokenService.isLoggedIn()\\\">You are logged in</h1>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login.component.html\n// module id = 671\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <form class=\\\"form-account\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <h1 class=\\\"form-account-heading text-muted\\\">Register</h1>\\r\\n        <label>Username: </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" placeholder=\\\"Enter Username\\\" name=\\\"username\\\" required />\\r\\n        <br />\\r\\n        <label>Password: </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" required />\\r\\n        <br />\\r\\n        <label>Email: </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" required />\\r\\n        <br />\\r\\n        <label>First Name: </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstname\\\" placeholder=\\\"Enter First Name\\\" name=\\\"firstname\\\" required />\\r\\n        <br />\\r\\n        <label>Last Name: </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastname\\\" placeholder=\\\"Enter Last Name\\\" name=\\\"lastname\\\" required />\\r\\n        <br />\\r\\n        <button class=\\\"btn btn-lg btn-danger btn-block\\\" type=\\\"submit\\\" >Register</button>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register.component.html\n// module id = 672\n// module chunks = 1"],"sourceRoot":""}